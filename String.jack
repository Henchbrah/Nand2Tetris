// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {
    field Array string;
    field int len, maxLen;
    

    /** Constructs a new empty String with a maximum length of maxLength. */
    constructor String new(int maxLength) {
        let maxLen = maxLength;
        let len = 0;
        if (maxLength > 0){
            let string = Array.new(maxLength);
        }    
        return this;
        
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Returns the current length of this String. */
    method int length() {
        return len;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
        return string[j];
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
        let string[j] = c;
        return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
        let string[len] = c;
        let len = len + 1;
        return this;
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
        let len = len - 1;
        return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
        var int pos,sum,neg;
        var char first;

        let pos = 0;
        let sum = 0;       
        let neg = 0;
        let first = charAt(0);
        
        if (len > 0) {
            if (string[0] = 45) {
                let neg = 1;
                let pos = pos + 1;
            }

        }

        while ( (pos < len) & (string[pos] < 58) & (string[pos] > 47) ){
            let sum = 10 * sum + (string[pos]-48);
            let pos = pos + 1;
        }

        if (neg = 1){
            return -sum;
        }
        else{
            return sum;
        }
    }

    /** Sets this String to hold a representation of the given number. */
    method void setInt(int number) {
        var int lastDigit;

       
        let len = 0;
        if (number < 0){
            do appendChar(45);
            let number = -number;
        }

        if (number < 10){
            do appendChar(48+number);
            return;
        }
        else {
            let lastDigit = number - ((number / 10) * 10 );
            do setInt2(number/10);
            do appendChar(48+lastDigit);
        }
          return;
    }

    method void setInt2(int number) {
        var int lastDigit;

        if (number < 10){
            do appendChar(48+number);
        }
        else {
            let lastDigit = number - ((number / 10) * 10 );
            do setInt2(number / 10);
            do appendChar(48+lastDigit);
        }
      return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return  128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
